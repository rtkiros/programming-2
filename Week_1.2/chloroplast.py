from molecule import Molecule
from atom import Atom

class Chloroplast:
    """
    Initialize a Chloroplast instance.

    This method sets the initial values for water, CO2, and products.

    Attributes:
        water (int): The number of H2O molecules.
        co2 (int): The number of CO2 molecules.
        products (list): The list of products generated by the chloroplast.
    """
    def __init__(self):
        self.water = 0
        self.co2 = 0
        self.products = []

    def add_molecule(self, molecule):
        """
        Adds a molecule to the chloroplast and returns a list of products if enough water and CO2 are available.

        Args:
            molecule (Molecule): The molecule to add to the chloroplast.

        Returns:
            list: A list of products if enough water and CO2 are available, otherwise an empty list.
        
        Raises:
            ValueError: If the molecule is not water or carbon dioxide.
        """

        # better to uppercase this, just to be sure.
        if str(molecule) == 'H2O':
            self.water += 1
        elif str(molecule) == 'CO2':
            self.co2 += 1
        else:
            raise ValueError("molecule must be water or carbon dioxide")
    
        if self.water >= 12 and self.co2 >= 6:
            self.water -= 12
            self.co2 -= 6
            # Create Atom instances
            hydrogen = Atom('H', 1, 1)
            oxygen = Atom('O', 8, 8)
            carbon = Atom('C', 6, 6)

            sugar_m = Molecule([(carbon, 6), (hydrogen, 12), (oxygen, 6)])
            oxygen_m = Molecule([(oxygen, 2)])

            # This is incorrect.
            # You should have returned new sugar and oxygen molecules. In this case you
            # just return a list of tuples of strings and numbers.
            return [(str(sugar_m), 1), (str(oxygen_m), 6)]
        return []
   
            
    def __str__(self):
        return f"Chloroplast: {self.water} H2O molecules, {self.co2} CO2 molecules"        